// <auto-generated />
using System;
using ITIExaminationSyustem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITIExaminationSyustem.Migrations
{
    [DbContext(typeof(Exam_Context))]
    [Migration("20240305142926_m2-stud_inst_Course")]
    partial class m2stud_inst_Course
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseDepartment", b =>
                {
                    b.Property<int>("Navigation_CoursesCourse_Id")
                        .HasColumnType("int");

                    b.Property<int>("Navigation_DepartmentsDepartment_Id")
                        .HasColumnType("int");

                    b.HasKey("Navigation_CoursesCourse_Id", "Navigation_DepartmentsDepartment_Id");

                    b.HasIndex("Navigation_DepartmentsDepartment_Id");

                    b.ToTable("CourseDepartment");
                });

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.Property<int>("Navigation_CoursesCourse_Id")
                        .HasColumnType("int");

                    b.Property<int>("Navigation_InstructorsInstructor_Id")
                        .HasColumnType("int");

                    b.HasKey("Navigation_CoursesCourse_Id", "Navigation_InstructorsInstructor_Id");

                    b.HasIndex("Navigation_InstructorsInstructor_Id");

                    b.ToTable("CourseInstructor");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.Course", b =>
                {
                    b.Property<int>("Course_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Course_Id"));

                    b.Property<int>("Course_Duration")
                        .HasColumnType("int");

                    b.Property<string>("Course_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Course_Id");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.Department", b =>
                {
                    b.Property<int>("Department_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Department_Id"));

                    b.Property<int?>("Department_MgrId")
                        .HasColumnType("int");

                    b.Property<string>("Department_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Department_Id");

                    b.HasIndex("Department_MgrId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.DepartmentInstructors", b =>
                {
                    b.Property<int?>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Ins_Id")
                        .HasColumnType("int");

                    b.HasKey("Dept_Id", "Ins_Id");

                    b.HasIndex("Ins_Id");

                    b.ToTable("DepartmentInstructors");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.Instructor", b =>
                {
                    b.Property<int>("Instructor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Instructor_Id"));

                    b.Property<string>("Instructor_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructor_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructor_Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Instructor_Id");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.Student", b =>
                {
                    b.Property<int>("Student_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Student_Id"));

                    b.Property<int>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<string>("Student_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Student_Id");

                    b.HasIndex("Dept_Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.StudentCourses", b =>
                {
                    b.Property<int>("Crs_Id")
                        .HasColumnType("int");

                    b.Property<int>("Std_Id")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.HasKey("Crs_Id", "Std_Id");

                    b.HasIndex("Std_Id");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("CourseDepartment", b =>
                {
                    b.HasOne("ITIExaminationSyustem.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("Navigation_CoursesCourse_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITIExaminationSyustem.Models.Department", null)
                        .WithMany()
                        .HasForeignKey("Navigation_DepartmentsDepartment_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.HasOne("ITIExaminationSyustem.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("Navigation_CoursesCourse_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITIExaminationSyustem.Models.Instructor", null)
                        .WithMany()
                        .HasForeignKey("Navigation_InstructorsInstructor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.Department", b =>
                {
                    b.HasOne("ITIExaminationSyustem.Models.Instructor", "Navigation_Department_Manager_Instructor")
                        .WithMany("Navigation_Departments")
                        .HasForeignKey("Department_MgrId");

                    b.Navigation("Navigation_Department_Manager_Instructor");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.DepartmentInstructors", b =>
                {
                    b.HasOne("ITIExaminationSyustem.Models.Department", "Navigation_Department")
                        .WithMany("Navigation_Department_Instructor")
                        .HasForeignKey("Dept_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITIExaminationSyustem.Models.Instructor", "Navigation_Instructor")
                        .WithMany("Navigation_Department_Instructor")
                        .HasForeignKey("Ins_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Navigation_Department");

                    b.Navigation("Navigation_Instructor");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.Student", b =>
                {
                    b.HasOne("ITIExaminationSyustem.Models.Department", "Navigation_Department")
                        .WithMany("Navigation_Students")
                        .HasForeignKey("Dept_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Navigation_Department");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.StudentCourses", b =>
                {
                    b.HasOne("ITIExaminationSyustem.Models.Course", "Navigation_Course")
                        .WithMany("Navigation_StudentCourses")
                        .HasForeignKey("Crs_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITIExaminationSyustem.Models.Student", "Navigation_Student")
                        .WithMany("Navigation_StudentCourses")
                        .HasForeignKey("Std_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Navigation_Course");

                    b.Navigation("Navigation_Student");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.Course", b =>
                {
                    b.Navigation("Navigation_StudentCourses");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.Department", b =>
                {
                    b.Navigation("Navigation_Department_Instructor");

                    b.Navigation("Navigation_Students");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.Instructor", b =>
                {
                    b.Navigation("Navigation_Department_Instructor");

                    b.Navigation("Navigation_Departments");
                });

            modelBuilder.Entity("ITIExaminationSyustem.Models.Student", b =>
                {
                    b.Navigation("Navigation_StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
